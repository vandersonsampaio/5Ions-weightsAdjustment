plugins {
    id 'maven-publish'
}

group = 'br.ufsc.ine.ppgcc.five-ions'
version = '0.0.1-beta.1'

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'jacoco'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        testImplementation "junit:junit:4.13.2"
        testImplementation "org.mockito:mockito-core:3.10.0"
        testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.7'
        testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
    }

    jacoco {
        toolVersion = "0.8.7"
        reportsDirectory = file("$buildDir/jacoco")
    }

    jacocoTestReport {
        dependsOn test

    }

    test {
        useJUnit()

        maxHeapSize = '1G'

        finalizedBy jacocoTestReport
    }
}

task jacocoRootReport(type: JacocoReport) {
    dependsOn = subprojects.test
    getAdditionalSourceDirs().setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    getSourceDirectories().setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    getClassDirectories().setFrom(files(subprojects.sourceSets.main.output))
    getExecutionData().setFrom(files(subprojects.jacocoTestReport.executionData))
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
    onlyIf = {
        true
    }
    doFirst {
        getExecutionData().setFrom(files(executionData.findAll {
            it.exists()
        }))
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        testing(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}